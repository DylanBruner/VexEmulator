{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n#endregion VEXcode Generated Robot Configuration\n\n# ----------------------------------------------------------------------------\n#                                                                            \n#    Project:        Using Events                                       \n#    Description:    This example will show how events work by triggering  \n#                    an event when the V5 Brain's Touchscreen is pressed\n#    Configuration:  None     \n#                                                                            \n# ----------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n# Create a global variable to count the number of time the screen is pressed\nscreen_press_count = 0\n\n# Create callback function for Brain Touchscreen pressed event\ndef displayLocation():\n    global screen_press_count\n\n    # Clear rows 3-5 for data to be printed\n    brain.screen.clear_row(3)\n    brain.screen.clear_row(4)\n    brain.screen.clear_row(5)\n    brain.screen.set_cursor(3,1)\n\n    screen_press_count = screen_press_count + 1\n\n    # Print the number of presses and the coordinates of the last Touchscreen press\n    brain.screen.print(\"# of Screen Presses?:\", screen_press_count)\n    brain.screen.next_row()\n    brain.screen.print(\"X Location:\", brain.screen.x_position())\n    brain.screen.next_row()\n    brain.screen.print(\"Y Location:\", brain.screen.y_position())\n\n# Create Brain Touchscreen callback event - 15 msec delay to ensure event get registered\nbrain.screen.pressed(displayLocation)\nwait(15, MSEC)\n\nbrain.timer.clear()\n\n# Main Controller loop to display the timer to show the event runs even while a loop is running\nwhile True:\n    brain.screen.clear_row(1)\n    brain.screen.set_cursor(1,1)\n\n    brain.screen.print(\"Timer:\", brain.timer.time(SECONDS))\n    wait(20, MSEC)\n","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}