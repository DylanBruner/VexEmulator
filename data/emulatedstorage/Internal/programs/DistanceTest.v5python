{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\ndistance_2 = Distance(Ports.PORT2)\nmagnet_4 = Electromagnet(Ports.PORT4)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n#endregion VEXcode Generated Robot Configuration\n\n# ----------------------------------------------------------------------------\n#                                                                            \n#    Project:        Distance Sensing\n#    Description:    This example will show all of the available commands\n#                    for using the Distance Sensor\n#    Configuration:  V5 Speedbot (Drivetrain 2-motor, No Gyro)\n#                    Distance Sensor in Port 2       \n#                                                                            \n# ----------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\nmagnet_4.\n\n\n# Begin project code\n\n# Print all Distance sensing values to the screen in an infinite loop\nwhile True:\n    # Clear the screen and set the cursor to top left corner on each loop\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n    brain.screen.print(\"Found Object?:\", distance_2.is_object_detected())\n    brain.screen.next_row()\n\n    if distance_2.is_object_detected():\n        if distance_2.object_size() == ObjectSizeType.LARGE:\n            brain.screen.print(\"Object: Large\")\n        elif distance_2.object_size() == ObjectSizeType.MEDIUM:\n            brain.screen.print(\"Object: Medium\")\n        else:\n            brain.screen.print(\"Object: Small\")\n    else:\n        brain.screen.print(\"No object\")\n\n    brain.screen.next_row()\n\n    brain.screen.print(\"Distance - Inches:\", distance_2.object_distance(INCHES))\n    brain.screen.next_row()\n\n    brain.screen.print(\"Distance - MM:\", distance_2.object_distance(MM))\n    brain.screen.next_row()\n    \n    brain.screen.print(\"Object velocity - M/S:\", distance_2.object_velocity())\n    brain.screen.next_row()\n\n    # A brief delay to allow text to be printed without distortion or tearing\n    wait(50,MSEC)\n","textLanguage":"python","rconfig":[{"port":[1,10,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":null},{"port":[2],"name":"distance_2","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[4],"name":"magnet_4","customName":false,"deviceType":"Magnet","deviceClass":"electromagnet","setting":{}}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}