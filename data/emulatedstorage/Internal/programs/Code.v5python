{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain_inertial = Inertial(Ports.PORT3)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_inertial, 319.19, 320, 40, MM, 1)\nForkMotorGroup_motor_a = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nForkMotorGroup_motor_b = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nForkMotorGroup = MotorGroup(ForkMotorGroup_motor_a, ForkMotorGroup_motor_b)\nrotation_4 = Rotation(Ports.PORT4, False)\ngps_8 = Gps(Ports.PORT8, 0.00, -240.00, MM, 180)\nDistanceLeft = Distance(Ports.PORT12)\nDistanceRight = Distance(Ports.PORT20)\noptical_19 = Optical(Ports.PORT19)\nbumper_a = Bumper(brain.three_wire_port.a)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    drivetrain_inertial.calibrate()\n    while drivetrain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------------------------------------------\n#\n#   Project:            Drive to Location (Known Starting Position)\n#\tDescription:        This example will show how to use a GPS Sensor to\n#                       navigate a V5 Moby Hero Bot to the center of a field by\n#                       driving along the X-axis then the Y-axis\n#   Starting Position:  Bottom Right Corner - Facing West\n#   Configuration:      V5 Hero Bot (Drivetrain 2-motor, Inertial)\n#                       Motor Group on Port 2 and 9\n#                       Rotation on Port 4\n#                       GPS on Port 8\n#                       Distance on Port 12\n#                       Optical on Port 19\n#                       Distance on Port 20\n#                       Bumper on 3-Wire Port A\n#\n# ------------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\n\ndef print_position():\n    # Print GPS position values to the V5 Brain\n    brain.screen.print(\"X: \", gps_8.x_position(MM))\n    brain.screen.print(\"  Y: \", gps_8.y_position(MM))\n    brain.screen.next_row()\n\n# Calibrate the Drivetrain for accurate turns\ncalibrate_drivetrain()\n\n# Calibrate the GPS Sensor\ngps_8.calibrate()\nwhile gps_8.is_calibrating():\n    sleep(25, MSEC)\n\n# Set the approximate starting position of the robot\n# This helps the GPS sensor know its starting position\n# if it is too close to the field walls to get an accurate initial reading\ngps_8.set_location(56, -45, INCHES, 270, DEGREES)\n\n# Print the starting position of the robot\nprint_position()\n\ndrivetrain.drive(FORWARD)\n\n# Keep driving until the GPS's x_position passes 0 (horizontal center)\nwhile not gps_8.x_position(MM) < 0:\n    wait(5, MSEC)\ndrivetrain.stop()\n\ndrivetrain.turn_to_heading(90, DEGREES, wait=True)\ndrivetrain.drive(FORWARD)\n\n# Keep driving until the GPS's y_position passes 0 (vertical center)\nwhile not gps_8.y_position(MM) > 0:\n    wait(5, MSEC)\ndrivetrain.stop()\n\n# Print the ending position of the robot\nprint_position()\n","textLanguage":"python","rconfig":[{"port":[1,10,3],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":null},{"port":[2,9],"name":"ForkMotorGroup","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"up","rev":"down","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[4],"name":"rotation_4","customName":false,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"false"},"triportSourcePort":22},{"port":[8],"name":"gps_8","customName":false,"deviceType":"GPS","deviceClass":"gps","setting":{"xOffset":"0","xOffsetUnit":"mm","yOffset":"-240","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":22},{"port":[12],"name":"DistanceLeft","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[20],"name":"DistanceRight","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[19],"name":"optical_19","customName":false,"deviceType":"Optical","deviceClass":"optical","setting":{},"triportSourcePort":22},{"port":[1],"name":"bumper_a","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}